Be careful, one of the hard cases has a smaller dimension.


Procedures:

-If the image is super noisy and bright, use background subtraction.
-If the image is very dark and it's hard to spot the cell, use brighten image. If brightening the image introduces noise, apply 
-If there're noises that couldn't be cleaned using the provided buttons, use the blacken button (needs bug fixes). 
-On the offchance that the cell body becomes segmented, the user also has the option to adjust the number of largest components they want. 



GUI improvement:
-Need a progress bar
-need to clean up text box after each run.
-after we confirm changes, axes1 should display the new image
-In thresholding, check whether the image is preprocessed and display warning accordingly. 
-Add a how to use button



Algorithm imporvement:

-In threshold, need to check if img is rgb or gray
-In gray overlay, need to check if img is rgb or gray
-Error handling. 


For 28369.2.6_2: 

bin_test=threshold(test,5);
imshow(bin_test);
largesttest=getLargestComponents(bin_test,1,0);
grayoverlay(testoriginal,largesttest);
testcc=buildCC2D(largesttest);
plotCC2(testcc);
thin_test=thin2D(testcc,6,0.6);
plotCC2(thin_test);


Possible sources of errors:
- If we choose the wrong relative and absolute threshold.
- Inconsistent thinning result. 


